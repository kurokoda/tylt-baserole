apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  labels:
    db: rethinkdb
  name: rethinkdb
spec:
  replicas: 1
  # Must match RETHINKDB-CLUSTER env and service name.
  serviceName: rethinkdb
  template:
    metadata:
      labels:
        db: rethinkdb
        role: replica
    spec:
      containers:

      #RethinkDB container
      - image: gcr.io/google_containers/rethinkdb:1.16.0_1
        imagePullPolicy: Always
        name: rethinkdb 
        envFrom:
        - configMapRef:
            name: globalvalues
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - containerPort: 8080
          name: admin-port
        - containerPort: 28015
          name: driver-port
        - containerPort: 29015
          name: cluster-port
        volumeMounts:
        - mountPath: /data
          name: data
        livenessProbe: &healthcheck
          tcpSocket:
            port: 28015
        readinessProbe:
          <<: *healthcheck

      #RethinkDB python sidecar
      - image: python 
        imagePullPolicy: Always
        name: rethinkdb-sidecar
        command: 
        - /bin/sh
        - -ec
        - |
          pip install rethinkdb -v 
          /usr/local/bin/rethinkdb-restore /mnt/tylt-rethink-prod/${PG_BACKUP_FILE}.tar.gz --force 
        envFrom:
        - configMapRef:
            name: globalvalues
        volumeMounts:
        - name: backup-dir
          mountPath: /mnt/tylt-rethink-prod
          readOnly: PRODUCTION_VAR

      dnsPolicy: ClusterFirst
      restartPolicy: Always
      volumes:
      - name: data
        emptyDir: {}
      - name: backup-dir
        hostPath:
          path: /mnt/s3-backup-share/tylt-rethink-prod
