apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  labels:
    db: rethinkdb
  name: rethinkdb
spec:
  replicas: 1
  # Must match RETHINKDB-CLUSTER env and service name.
  serviceName: rethinkdb
  template:
    metadata:
      labels:
        db: rethinkdb
        role: replica
    spec:
      containers:


      - image: rethinkdb 
        imagePullPolicy: Always
        name: rethinkdb
        envFrom:
        - configMapRef:
            name: globalvalues
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: RETHINK_CLUSTER
          value: rethinkdb
        - name: USE_SERVICE_LOOKUP
          value: "yes"
        ports:
        - containerPort: 8080
          name: admin
        - containerPort: 28015
          name: driver
        - containerPort: 29015
          name: cluster
        volumeMounts:
        - mountPath: /data
          name: data
        livenessProbe: &healthcheck
          tcpSocket:
            port: 28015
        readinessProbe:
          <<: *healthcheck

      - image: python 
        imagePullPolicy: Always
        name: rethinkdb-sidecar
        command: 
        - /bin/sh
        - -ec
        - |
          pip install rethinkdb
        envFrom:
        - configMapRef:
            name: globalvalues
        - name: backup-dir
          mountPath: /mnt/tylt-rethink-prod
          readOnly: PRODUCTION_VAR

      dnsPolicy: ClusterFirst
      restartPolicy: Always
      volumes:
      - name: data
        emptyDir: {}
      - name: backup-dir
        hostPath:
          path: /mnt/s3-backup-share/tylt-rethink-prod
